apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.COMPILE_SDK_VERSION


    defaultConfig {
        minSdkVersion rootProject.ext.MIN_SDK_VERSION
        targetSdkVersion rootProject.ext.TARGET_SDK_VERSION
        versionCode 100
        versionName "1.0.0"
        applicationId "rv.daimhim.rvdecorationtest"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation "com.android.support:appcompat-v7:$rootProject.ext.LIB_VERSION"
    implementation "com.android.support:design:$rootProject.ext.LIB_VERSION"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.LIB_VERSION"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-3'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.google.dagger:dagger:2.15'
    implementation project(':rvdecoration')
    implementation project(':rvadapter')

}

configurations.all {

    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("design")) {
                details.useVersion '25.4.0'//默认使用的版本
            }
        }
    }
}
